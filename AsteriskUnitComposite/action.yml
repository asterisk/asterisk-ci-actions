name: AsteriskUnitComposite
inputs:
  asterisk_repo:
    required: true
    type: string
  pr_number:
    required: true
    type: number
  pr_commit:
    required: true
    type: string
  base_branch:
    required: true
    type: string
  is_cherry_pick:
    required: false
    type: boolean
    default: false
  build_script:
    required: false
    type: string
    default: "buildAsterisk.sh"
  build_options:
    required: false
    type: string
    default: ""
  modules_blacklist:
    description: 'List of Asterisk modules to blacklist from the build'
    default: ""
    required: false
  github_token:
    description: 'GitHub API Access Token.'
    default: ${{ github.token }}
    required: false
  unittest_command:
    type: string
    required: true
  
runs:
  using: "composite"
  steps:
    - name: SetupUbuntuRunner
      uses: asterisk/asterisk-ci-actions/SetupUbuntuRunner@main

    - name: SetTestName
      shell: bash
      run: |
        BASE_BRANCH="${{inputs.base_branch}}"
        UNIT_TEST_NAME="unittests-${BASE_BRANCH//\//-}"
        echo "UNIT_TEST_NAME=${UNIT_TEST_NAME}" >> "${GITHUB_ENV}"

    - name: Get Asterisk
      uses: asterisk/asterisk-ci-actions/GetRepo@main
      with:
        repo:              ${{inputs.asterisk_repo}}
        base_branch:       ${{inputs.base_branch}}
        pr_number:         ${{inputs.pr_number}}
        is_cherry_pick:    ${{inputs.is_cherry_pick}}
        build_script:      ${{inputs.build_script}}
        build_options:     ${{inputs.build_options}}
        github_token:      ${{inputs.github_token}}
        modules_blacklist: ${{inputs.modules_blacklist}}

    - name: Run unittest-${{inputs.base_branch}}
      uses: asterisk/asterisk-ci-actions/RunAsteriskUnitTests@main
      with:
        asterisk_repo:    ${{inputs.asterisk_repo}}
        base_branch:      ${{inputs.base_branch}}
        pr_number:        ${{inputs.pr_number}}
        github_token:     ${{inputs.github_token}}
        unittest_command: ${{inputs.unittest_command}}

    - name: Save Output
      id: save-output
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: ${{env.UNIT_TEST_NAME}}
        path: cache/output
