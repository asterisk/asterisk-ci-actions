name: ReleaserComposite
inputs:
  product:
    description: |
      Product name
      (default: asterisk)
    type: string
    default: asterisk
  is_security:
    description: |
      Security?
      (Implies no RCs)
    required: true
    type: boolean
    default: false
  advisories:
    description: |
      Comma separated list of advisories.
      NO SPACES
      Example: GHSA-4xjp-22g4-9fxm,GHSA-4xjp-22g4-zzzz
    required: false
    type: string
  is_hotfix:
    description: |
      Hotfix?
      (A patch release but not security.  No RCs)
    required: true
    type: boolean
    default: false
  new_version:
    description: |
      New Version
      Examples:
        21.4.0-rc1, 21.4.0-rc2, 21.4.0, 21.4.1
        certified/21.4-cert1-rc1, certified/21.4-cert1
    required: true
    type: string
  start_version:
    description: |
      Last Version
      Only use when you KNOW that the automated
      process won't get it right.
    required: false
    type: string
  force_cherry_pick:
    description: |
      Force cherry-pick for non-RC1 releases?
    required: true
    type: boolean
    default: false
  push_release_branches:
    description: |
      Push release branches live?
    required: true
    type: boolean
    default: false
  create_github_release:
    description: |
      Create the GitHub release?
    required: true
    type: boolean
    default: false
  push_tarballs:
    description: |
      Push tarballs to downloads server?
    required: true
    type: boolean
    default: false
  send_email:
    description: 'Send announcement emails?'
    required: true
    type: boolean
    default: false
  repo:
    type: string
    required: true
  mail_list_ga:
    type: string
    required: true
  mail_list_rc:
    type: string
    required: true
  mail_list_cert_ga:
    type: string
    required: true
  mail_list_cert_rc:
    type: string
    required: true
  mail_list_sec:
    type: string
    required: true
  sec_adv_url_base:
    type: string
    required: true
  gpg_private_key:
    type: string
    required: true
  github_token:
    type: string
    required: true
  asteriskteam_gh_token:
    type: string
    required: true
  application_id:
    type: string
    required: true
  application_private_key:
    type: string
    required: true
  asteriskteamsa_username:
    type: string
    required: true
  asteriskteamsa_token:
    type: string
    required: true
  deploy_ssh_priv_key:
    type: string
    required: true
  deploy_ssh_username:
    type: string
    required: true
  deploy_host:
    type: string
    required: true
  deploy_dir:
    type: string
    required: true
  fpbx_issue_repo:
    type: string
    required: true
    
  
runs:
  using: "composite"
  steps:
    - name: Get token needed push release artifacts
      id: get_workflow_token
      uses: peter-murray/workflow-application-token-action@v3
      with:
        application_id: ${{inputs.application_id}}
        application_private_key: ${{inputs.application_private_key}}
        organization: asterisk

    - name: Run Releaser
      id: releaser
      uses: asterisk/asterisk-ci-actions/Releaser@main
      with:
        product: ${{inputs.product}}
        is_security: ${{inputs.is_security}}
        advisories: ${{inputs.advisories}}
        is_hotfix: ${{inputs.is_hotfix}}
        new_version: ${{inputs.new_version}}
        start_version: ${{inputs.start_version}}
        force_cherry_pick: ${{inputs.force_cherry_pick}}
        push_release_branches: ${{inputs.push_release_branches}}
        create_github_release: ${{inputs.create_github_release}}
        push_tarballs: ${{inputs.push_tarballs}}
        send_email: ${{inputs.send_email}}
        mail_list_ga: ${{inputs.mail_list_ga}}
        mail_list_rc: ${{inputs.mail_list_rc}}
        mail_list_cert_ga: ${{inputs.mail_list_cert_ga}}
        mail_list_cert_rc: ${{inputs.mail_list_cert_rc}}
        mail_list_sec: ${{inputs.mail_list_sec}}
        sec_adv_url_base: ${{inputs.sec_adv_url_base}}
        repo: ${{inputs.repo}}
        gpg_private_key: ${{inputs.gpg_private_key}}
        github_token: ${{steps.get_workflow_token.outputs.token}}
        deploy_ssh_priv_key: ${{inputs.deploy_ssh_priv_key}}
        deploy_ssh_username: ${{inputs.deploy_ssh_username}}
        deploy_host: ${{inputs.deploy_host}}
        deploy_dir: ${{inputs.deploy_dir}}

    - name: Save Output
      id: save-output
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: ${{inputs.product}}-${{inputs.new_version}}
        path: ${{inputs.product}}-${{inputs.new_version}}

    - name: Send Release Announcements
      if: inputs.send_email && steps.releaser.outputs.mail_list != 'none'
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 465
        secure: true
        username: ${{inputs.asteriskteamsa_username}}
        password: ${{inputs.asteriskteamsa_token}}
        subject: ${{steps.releaser.outputs.subject}}
        to: ${{steps.releaser.outputs.mail_list}}
        from: Asterisk Development Team <asteriskteamsa@sangoma.com>
        body: "file://${{github.workspace}}/${{steps.releaser.outputs.email_announcement}}"
        reply_to: no-reply@sangoma.com
        ignore_cert: true
        convert_markdown: false

    - name: Open FPBX Issue
      if: inputs.send_email && steps.releaser.outputs.release_type == 'ga'
      env:
        GH_TOKEN: ${{inputs.asteriskteam_gh_token}}
        FPBX_ISSUE_REPO: ${{inputs.fpbx_issue_repo}}
        ASTERISK_VERSION: ${{inputs.new_version}}
      run: |
        gh issue create -R ${FPBX_ISSUE_REPO} \
          --title "Asterisk Version ${ASTERISK_VERSION} Has Been Released" \
          --body "Release Notes: https://github.com/asterisk/asterisk/releases/tag/${ASTERISK_VERSION}" 
