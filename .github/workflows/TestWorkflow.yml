name: TestWorkflow
run-name: "TestWorkflow"
on:
  workflow_dispatch:
    inputs:
      branches:
        description: "JSON array of branches: ['18','20'] (no spaces) or leave blank for all current branches."
        required:    false
        type:        string

env:
  FROM_WF: "from workflow"

jobs:
  Job1:
    runs-on: ubuntu-latest
    env:
      FROM_JOB: "from job"
    defaults:
      run:
        shell: bash
    outputs:
      testgroup:      ${{ steps.st1.outputs.TESTGROUP }}
      testobject:      ${{ steps.st1.outputs.TESTOBJECT }}
    steps:
      - name: Test ENV
        id: st1
        run: |
          {
            echo "TESTGROUP=pjs5" >> ${GITHUB_OUTPUT}
            echo 'TESTOBJECT<<EOF'
            cat <<EOFINNER
            {
            "pjs5": {
                "name": "pjs5",
                "dir": "tests/CI/output/pjsip5",
                "timeout": 240,
                "step_timeout_minutes": 45,
                "options": "",
                "testcmd": "--test-regex=tests/channels/pjsip/[s]"
            }
            }
          EOFINNER
            echo "EOF"
          } >> ${GITHUB_OUTPUT}

  Job2:
    needs: Job1
    runs-on: ubuntu-latest
    env:
      XXXXX: ${{ needs.Job1.outputs.testobject }}
      GROUP: ${{ needs.Job1.outputs.testgroup }}
      ZZZZZ: ${{ toJSON(fromJSON(needs.Job1.outputs.testobject)[needs.Job1.outputs.testgroup]) }}
    defaults:
      run:
        shell: bash
    steps:
      - name: Test GET
        run: |
          echo "TESTOBJ: ${XXXXX}"
          echo "TESTGROUP: ${GROUP}"
          echo "LOCAL: ${{ toJSON(fromJSON(env.XXXXX)[env.GROUP]) }}"
          echo "TESTOBJZ: ${ZZZZZ}"


