name: TestWorkflow
run-name: "TestWorkflow"
on:
  workflow_dispatch:

env:
  ACTIONS_OWNER:     asterisk
  ACTIONS_REPO:      asterisk-ci-actions
  ACTIONS_BRANCH:    main-test-native
  SCRIPT_DIR:        ${{ github.workspace }}/asterisk-ci-actions/scripts
  GH_TOKEN:          ${{secrets.GITHUB_TOKEN}}
  RUN_ID:            ${{ github.id }}

jobs:
  Job1:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: DumpEnvironment
        uses: asterisk/asterisk-ci-actions/DumpEnvironmentAction@main
        with:
          save_output: true

      - name: test
        run: |
          mkdir logs
          step_summary=""
          step_summary+="FAILURE: rest_api/recording/duration\nFAILURE: rest_api/recording/nominal"
          echo -e "$step_summary" >> logs/STEP_SUMMARY
          exit 1
      - name: Save Output
        id: save-output
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: job1
          path: |
            logs

  Job2:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: test
        run: |
          mkdir logs
          step_summary=""
          step_summary+="FAILURE: rest_api/recording/XXXXX\nFAILURE: rest_api/recording/YYYYYYY"
          echo -e "$step_summary" >> logs/STEP_SUMMARY
          exit 1
      - name: Save Output
        id: save-output
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: job2
          path: |
            logs

  Cleanup:
    needs: [Job1, Job2]
    runs-on: ubuntu-latest
    if: ${{ always() }}
    defaults:
      run:
        shell: bash
    steps:
      - name: test
        run: |
          gh --repo ${{ github.repository }} \
            run download ${RUN_ID} -D run-${RUN_ID}
          find run-${RUN_ID} -name STEP_SUMMARY
          for f in $(find run-${RUN_ID} -name STEP_SUMMARY) ; do
            cat $f >> $GITHUB_STEP_SUMMARY
          done
          cat $GITHUB_STEP_SUMMARY

      - name: DumpEnvironment
        uses: asterisk/asterisk-ci-actions/DumpEnvironmentAction@main
        with:
          save_output: true
