name: CherryPickTest
on:
  workflow_call:
    inputs:
      actions_ref:
        description: 'JSON object reference to the actions: { "owner": "asterisk", "repo": "asterisk-ci-actions", "branch": "main" }'
        type: string
        required: false
        default: '{ "owner": "asterisk", "repo": "asterisk-ci-actions", "branch": "main" }'
    secrets:
      TOKEN:
        required: true

env:
  PR_NUMBER: ${{ github.event.number }}
  ACTIONS_OWNER:    ${{ fromJSON(inputs.actions_ref).owner }}
  ACTIONS_REPO:     ${{ fromJSON(inputs.actions_ref).repo }}
  ACTIONS_BRANCH:   ${{ fromJSON(inputs.actions_ref).branch }}
  SCRIPT_DIR:       ${{ github.workspace }}/asterisk-ci-actions/scripts

jobs:
  GetBranches:
    name: GetBranches
    runs-on: ubuntu-latest
    outputs:
      branches:           ${{ steps.getbranches.outputs.branches }}
      branch_count:       ${{ steps.getbranches.outputs.branch_count }}
      testsuite_test_pr:  ${{ steps.testsuitepr.outputs.testsuite_test_pr }}
    steps:
      - name: Setup Runner
        run: |
          # Setup
          wget -qO asterisk-ci-actions.tar.gz \
            https://github.com/${ACTIONS_OWNER}/${ACTIONS_REPO}/archive/refs/heads/${ACTIONS_BRANCH}.tar.gz
          tar -xf asterisk-ci-actions.tar.gz --transform="s/^${ACTIONS_REPO}-${ACTIONS_BRANCH}/asterisk-ci-actions/g"

      - name: Remove Trigger Label, Add InProgress Label
        env:
          GH_TOKEN: ${{ secrets.TOKEN }}
        run: |
          gh pr edit --repo ${{ github.repository }} \
            --remove-label ${{ vars.CHERRY_PICK_TEST_LABEL }} \
            --remove-label ${{ vars.CHERRY_PICK_CHECKS_PASSED_LABEL }} \
            --remove-label ${{ vars.CHERRY_PICK_CHECKS_FAILED_LABEL }} \
            --remove-label ${{ vars.CHERRY_PICK_GATES_PASSED_LABEL }} \
            --remove-label ${{ vars.CHERRY_PICK_GATES_FAILED_LABEL }} \
            --remove-label ${{ vars.CHERRY_PICK_TESTING_IN_PROGRESS }} \
            $PR_NUMBER || :

      - name: Get cherry-pick branches
        uses: ./asterisk-ci-actions/GetCherryPickBranchesFromPR
        id: getbranches
        with:
          repo:              ${{ github.repository }}
          pr_number:         ${{ env.PR_NUMBER }}
          cherry_pick_regex: ${{ vars.CHERRY_PICK_REGEX }}
          github_token:      ${{ secrets.TOKEN }}

      - name: Check Branch Count
        if: ${{ steps.getbranches.outputs.branch_count > 0 }}
        env:
          GH_TOKEN: ${{ secrets.TOKEN }}
        run: |
          gh pr edit --repo ${{ github.repository }} \
          --add-label ${{ vars.CHERRY_PICK_TESTING_IN_PROGRESS }} \
          $PR_NUMBER || :

      - name: GetTestsuitePR
        id: testsuitepr
        uses: ./asterisk-ci-actions/GetTestsuitePRFromAsteriskPR
        with:
          repo:                            ${{ github.repository }}
          pr_number:                       ${{ github.event.number }}
          testsuite_test_pr_regex:         ${{ vars.TESTSUITE_TEST_PR_REGEX }}
          testsuite_test_auto_merge_regex: ${{ vars.TESTSUITE_TEST_AUTO_MERGE_REGEX }}
          github_token:                    ${{ secrets.TOKEN }}

  CherryPickPrelimTestMatrix:
    needs: GetBranches
    if: ${{ needs.GetBranches.outputs.branch_count > 0 && ( success() || failure() ) }}
    strategy:
      fail-fast: false
      matrix:
        branch: ${{ fromJSON(needs.GetBranches.outputs.branches) }}
    uses: ./.github/workflows/RunCherryPickPrelimTest.yml
    with:
      repo:        ${{ github.repository }}
      pr_number:   ${{ github.event.number }}
      base_branch: ${{ matrix.branch }}
    secrets: inherit

  CherryPickTestMatrix:
    needs: [GetBranches,CherryPickPrelimTestMatrix]
    if: ${{ needs.GetBranches.outputs.branch_count > 0 && ( success() || failure() ) }}
    strategy:
      fail-fast: false
      matrix:
        branch: ${{ fromJSON(needs.GetBranches.outputs.branches) }}
    uses: ./.github/workflows/AsteriskUnitGateTest.yml
    with:
      actions_ref:       ${{ inputs.actions_ref }}
      test_type:         cherry-pick
      asterisk_repo:     ${{ github.repository }}
      pr_number:         ${{ github.event.number }}
      base_branch:       ${{ matrix.branch }}
      is_cherry_pick:    true
      build_options:     ${{ vars.BUILD_OPTIONS }}
      unittest_command:  ${{ vars.UNITTEST_COMMAND }}
      testsuite_repo:    ${{ vars.TESTSUITE_REPO }}
      testsuite_test_pr: ${{ needs.GetBranches.outputs.testsuite_test_pr }}
      gatetest_list:     ${{ vars.GATETEST_LIST }}
      gatetest_commands: ${{ vars.GATETEST_COMMANDS }}
    secrets: inherit

  CherryPickTestResults:
    needs: [ GetBranches, CherryPickPrelimTestMatrix, CherryPickTestMatrix ]
    if: ${{ needs.GetBranches.outputs.branch_count > 0 && ( success() || failure() ) }}
    runs-on: ubuntu-latest
    steps:
      - name: Check test matrix status
        env:
          RESULT_UNIT:       ${{ needs.CherryPickTestMatrix.result }}
          GH_TOKEN:          ${{ secrets.TOKEN }}
          IN_PROGRESS_LABEL: ${{ vars.CHERRY_PICK_TESTING_IN_PROGRESS }}
          PASSED_LABEL:      ${{ vars.CHERRY_PICK_CHECKS_PASSED_LABEL }}
          FAILED_LABEL:      ${{ vars.CHERRY_PICK_CHECKS_FAILED_LABEL }}
        run: |
          declare -i rc=0
          case $RESULT_UNIT in
            success)
              echo "All tests passed"
              ;;
            skipped)
              echo "One or more tests were skipped because of an earlier failure"
              rc+=1
              ;;
            *)
              echo "One or more tests failed ($RESULT)"
              rc+=1
          esac
          [ $rc -gt 0 ] && label=$FAILED_LABEL || label=$PASSED_LABEL
          gh pr edit --repo ${{ github.repository }} \
            --remove-label $IN_PROGRESS_LABEL \
            --add-label $label \
            $PR_NUMBER || :
          exit $rc
