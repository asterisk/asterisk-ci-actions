name: 'RAGT'
on:
  workflow_call:
    inputs:
      test_type:
        required: true
        type: string
      asterisk_repo:
        required: true
        type: string
      pr_number:
        required: true
        type: string
      base_branch:
        required: true
        type: string
      is_cherry_pick:
        required: false
        type: boolean
        default: false
      build_script:
        required: false
        type: string
        default: "buildAsterisk.sh"
      build_options:
        required: false
        type: string
        default: ""
      modules_blacklist:
        description: 'List of Asterisk modules to blacklist from the build'
        type: string
        default: ""
        required: false
      cache_dir:
        type: string
        default: cache
        required: false
      testsuite_repo:
        description: 'Testsuite Repo (default: asterisk/testsuite)'
        type: string
        required: false
        default: asterisk/testsuite
      gatetest_group:
        description: 'Gate Group'
        type: string
        required: true
      gatetest_commands:
        description: 'Gate Commands'
        type: string
        required: true

jobs:
  RunGateTests:
    name: GateTests ${{ inputs.base_branch }} ${{inputs.gatetest_group}}
    runs-on: ubuntu-latest
    steps:
      - name: SetupUbuntuRunner
        uses: asterisk/asterisk-ci-actions/SetupUbuntuRunner@main

      - name: GetTestsuiteDir
        shell: bash
        run: |
          echo "GC_TESTSUITE_DIR=$(basename ${{inputs.testsuite_repo}})" >> "${GITHUB_ENV}"
          BASE_BRANCH="${{inputs.base_branch}}"
          GC_TEST_NAME="${{inputs.test_type}}-${{inputs.gatetest_group}}-${BASE_BRANCH//\//-}"
          echo "GC_TEST_NAME=${GC_TEST_NAME}" >> "${GITHUB_ENV}"

      - name: Get Asterisk
        uses: asterisk/asterisk-ci-actions/GetRepo@main
        with:
          repo:              ${{inputs.asterisk_repo}}
          base_branch:       ${{inputs.base_branch}}
          pr_number:         ${{inputs.pr_number}}
          is_cherry_pick:    ${{inputs.is_cherry_pick}}
          build_script:      ${{inputs.build_script}}
          build_options:     ${{inputs.build_options}}
          github_token:      ${{secrets.TOKEN}}
          modules_blacklist: ${{inputs.modules_blacklist}}

      - id: runtests
        name: ${{inputs.test_type}} Test ${{inputs.gatetest_group}}-${{inputs.base_branch}}
        uses: asterisk/asterisk-ci-actions/RunAsteriskGateTests@main
        with:
          asterisk_repo:     ${{inputs.asterisk_repo}}
          base_branch:       ${{inputs.base_branch}}
          pr_number:         ${{inputs.pr_number}}
          cache_dir:         ${{inputs.cache_dir}}
          github_token:      ${{secrets.TOKEN}}
          testsuite_repo:    ${{inputs.testsuite_repo}}
          gatetest_group:    0
          gatetest_command:  ${{ toJSON(fromJSON(inputs.gatetest_commands)[inputs.gatetest_group]) }}
 
      - name: Save Output
        id: save-output
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{env.GC_TEST_NAME}}
          path: |
            ${{env.GC_TESTSUITE_DIR}}/logs
            ${{inputs.cache_dir}}

