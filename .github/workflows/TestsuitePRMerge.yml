name: PRMerge
on:
  workflow_call:

permissions:
  actions: write
  checks: read
  contents: write
  issues: read
  pull-requests: write
  statuses: read

env:
  REPO:            ${{ github.repository }}
  REPO_DIR:        ${{ github.workspace }}/${{ github.event.repository.name }}
  REPO_ORG:        ${{ github.event.repository.owner.login }}
  PR_NUMBER:       ${{ github.event.number }}
  BASE_BRANCH:     ${{ github.event.pull_request.base.ref }}
  LOG_DIR:         ${{ github.workspace }}/logs
  LOG_FILE:        ${{ github.workspace }}/logs/job_summary.txt
  GH_TOKEN:        ${{ github.token }}

jobs:
  Setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      branches:     ${{ steps.setup.outputs.BRANCHES }}
      branch_count: ${{ steps.setup.outputs.BRANCH_COUNT }}
      all_branches: ${{ steps.setup.outputs.all_branches }}
    steps:
        # ACTIONS_PATH, SCRIPT_DIR, NORMALIZED_BRANCH env vars
      - name: GetActionsRepo
        uses: asterisk/asterisk-ci-actions/GetActionsRepo@main

      - id: setup
        env:
          CHERRY_PICK_REGEX:  ${{ vars.CHERRY_PICK_REGEX }}
        run: |

          gh pr edit --repo ${REPO} \
            --remove-label ${{ github.event.label.name }} \
            --remove-label ${{ vars.PRE_MERGE_CHECKS_PASSED_LABEL }} \
            --remove-label ${{ vars.PRE_MERGE_CHECKS_FAILED_LABEL }} \
            --remove-label ${{ vars.PRE_MERGE_TESTING_IN_PROGRESS }} \
            ${PR_NUMBER} || :

          # The script will populate BRANCHES and BRANCH_COUNT in
          # both GITHUB_ENV and GITHUB_OUTPUT for future use but
          # we need them here as well so we need to capture and
          # parse the output.
          result=$(${SCRIPT_DIR}/getCherryPickBranchesFromPR.sh \
            --repo=${REPO} \
            --pr-number=${PR_NUMBER} \
            --cherry-pick-regex="${CHERRY_PICK_REGEX}")
          BRANCH_COUNT=$(echo ${result} | jq -c '.branch_count')
          BRANCHES=$(echo ${result} | jq -c '.branches')
          FORCED_NONE=$(echo ${result} | jq -c '.forced_none')

          gh pr edit --repo ${{ github.repository }} \
            --add-label ${{ vars.PRE_MERGE_TESTING_IN_PROGRESS }} \
            ${PR_NUMBER} || :

          ALL_BRANCHES=$(echo "$BRANCHES" | jq -c "[ \"$BASE_BRANCH\" ] + .")
          echo "all_branches=${ALL_BRANCHES}" >>${GITHUB_OUTPUT}

      - name: CheckCherryPicks
        run: |
          ${SCRIPT_DIR}/cherryPick.sh \
            --repo=${REPO} \
            --repo-dir=${REPO_DIR} \
            --pr-number=${PR_NUMBER} \
            --output-dir=${LOG_DIR} \
            --branches="${BRANCHES}"

  PreMergeTest:
    needs: [ Setup ]
    if: success()
    permissions:
      actions: read
      checks: read
      contents: read
      issues: read
      pull-requests: read
      statuses: read
    strategy:
      fail-fast: false
      matrix:
        branch: ${{ fromJSON(needs.Setup.outputs.all_branches) }}
    uses: ./.github/workflows/TestsuiteRunUnitTests.yml
    with:
      pr_number:         ${{ github.event.number }}
      base_branch:       ${{ matrix.branch }}
      unittest_command:  ${{ vars.UNITTEST_COMMAND }}

  PreMergeTestResults:
    if: ${{ success() || failure() || cancelled() }}
    needs: [ Setup, PreMergeTest ]
    runs-on: ubuntu-latest
    steps:
      - name: Check unit test matrix status
        env:
          RESULT:   ${{ needs.PreMergeTest.result }}
        run: |
          declare -i rc=0
          case $RESULT in
            success)
              echo "All tests passed"
              ;;
            *)
              echo "One or more tests failed ($RESULT)"
              rc+=1
              ;;
          esac
          [ $rc -gt 0 ] && label=${{ vars.PRE_MERGE_CHECKS_FAILED_LABEL }} || \
            label=${{ vars.PRE_MERGE_CHECKS_PASSED_LABEL }}
          gh pr edit --repo ${REPO} \
            --remove-label ${{ vars.PRE_MERGE_TESTING_IN_PROGRESS }} \
            --add-label $label \
            ${PR_NUMBER} || :

  MergeAndCherryPick:
    needs: [ Setup, PreMergeTestResults ]
    if: success() && !inputs.dry_run
    runs-on: ubuntu-latest
    steps:
        # ACTIONS_PATH, SCRIPT_DIR, NORMALIZED_BRANCH env vars
      - name: GetActionsRepo
        uses: asterisk/asterisk-ci-actions/GetActionsRepo@main

      - name: Start Merge
        run: |
            gh pr edit --repo ${REPO} \
              --add-label ${{ vars.MERGE_IN_PROGRESS_LABEL }} \
              ${PR_NUMBER} || :

      - name: CherryPicks
        env:
          BRANCHES: ${{ needs.Setup.outputs.branches }}
        run: |
          ${SCRIPT_DIR}/cherryPick.sh \
            --repo=${REPO} \
            --repo-dir=${REPO_DIR} \
            --pr-number=${PR_NUMBER} \
            --output-dir=${LOG_DIR} \
            --branches="${BRANCHES}" \
            --push

      - name: Merge
        run: |
          gh pr merge --repo ${REPO} --rebase \
              --admin ${PR_NUMBER}

  PostWorkflow:
    needs: [ Setup, PreMergeTestResults, MergeAndCherryPick ]
    if: ${{ success() || failure() || cancelled() }}
    runs-on: ubuntu-latest
    steps:
      - name: Merge Cleanup
        env:
          RESULT:       ${{ needs.MergeAndCherryPick.result }}
          BRANCH_COUNT: ${{ needs.Setup.outputs.branch_count }}
          BRANCHES:     ${{ needs.Setup.outputs.branches }}
        run: |
          case $RESULT in
            success)
              gh pr edit --repo ${REPO} \
                --remove-label ${{ vars.MERGE_IN_PROGRESS_LABEL }} \
                ${PR_NUMBER} || :
              if [ $BRANCH_COUNT -eq 0 ] ; then
                gh pr comment --repo ${REPO} \
                  -b "Successfully merged to branch $BASE_BRANCH." \
                  ${PR_NUMBER} || :
              else
                gh pr comment --repo ${REPO} \
                  -b "Successfully merged to branch $BASE_BRANCH and cherry-picked to $BRANCHES" \
                  ${PR_NUMBER} || :
              fi
              exit 0
              ;;
            failure)
              gh pr edit --repo ${REPO} \
                --remove-label ${{ vars.MERGE_IN_PROGRESS_LABEL }} \
                --add-label ${{ vars.MERGE_FAILED_LABEL }} \
                ${PR_NUMBER} || :
              exit 1
              ;;
              *)
          esac
