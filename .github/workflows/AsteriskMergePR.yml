name: MergePR
on:
  workflow_call:
    inputs:
      dry_run:
        type: boolean
        default: false
    secrets:
      TOKEN:
        required: true
      application_id:
        required: true
      application_private_key:
        required: true

env:
  PR_NUMBER:   ${{ github.event.number }}
  BASE_BRANCH: ${{ github.event.pull_request.base.ref }}

jobs:
  GetBranches:
    name: GetBranches
    runs-on: ubuntu-latest
    outputs:
      branches:     ${{ steps.getbranches.outputs.branches }}
      all_branches: ${{ steps.checkbranches.outputs.all_branches }}
      branch_count: ${{ steps.getbranches.outputs.branch_count }}
    steps:
      - name: Clean up labels
        env:
          GH_TOKEN: ${{ secrets.TOKEN }}
        run: |
          gh pr edit --repo ${{ github.repository }} \
            --remove-label ${{ github.event.label.name }} \
            --remove-label ${{ vars.PRE_MERGE_CHECKS_PASSED_LABEL }} \
            --remove-label ${{ vars.PRE_MERGE_CHECKS_FAILED_LABEL }} \
            --remove-label ${{ vars.PRE_MERGE_TESTING_IN_PROGRESS }} \
            ${{ env.PR_NUMBER }} || :

      - name: Get cherry-pick branches
        uses: asterisk/asterisk-ci-actions/GetCherryPickBranchesFromPR@main
        id: getbranches
        with:
          repo:              ${{ github.repository }}
          pr_number:         ${{ env.PR_NUMBER }}
          cherry_pick_regex: ${{ vars.CHERRY_PICK_REGEX }}
          github_token:      ${{ secrets.TOKEN }}

      - name: Check Branch Count
        id: checkbranches
        env:
          BRANCH_COUNT: ${{ steps.getbranches.outputs.branch_count }}
          BRANCHES:     ${{ steps.getbranches.outputs.branches }}
          GH_TOKEN:     ${{ secrets.TOKEN }}
        run: |
          gh pr edit --repo ${{ github.repository }} \
          --add-label ${{ vars.PRE_MERGE_TESTING_IN_PROGRESS }} \
          ${{ env.PR_NUMBER }} || :
          all_branches=$(echo "$BRANCHES" | jq -c "[ \"$BASE_BRANCH\" ] + .")
          echo "all_branches=${all_branches}" >>${GITHUB_OUTPUT}

      - name: Pre Check Cherry-Picks
        if: ${{ steps.getbranches.outputs.branch_count > 0 }}
        uses: asterisk/asterisk-ci-actions/CherryPick@main
        with:
          repo:         ${{ github.repository }}
          pr_number:    ${{ env.PR_NUMBER }}
          branches:     ${{ steps.getbranches.outputs.branches }}
          github_token: ${{ secrets.TOKEN }}
          push:         false

  PreMergeTest:
    needs: [ GetBranches ]
    if: success()
    strategy:
      fail-fast: false
      matrix:
        branch: ${{ fromJSON(needs.GetBranches.outputs.all_branches) }}
    uses: ./.github/workflows/AsteriskUnitGateTest.yml
    with:
      test_type:         mergepr
      asterisk_repo:     ${{ github.repository }}
      pr_number:         ${{ github.event.number }}
      base_branch:       ${{ matrix.branch }}
      is_cherry_pick:    true
      build_options:     ${{ vars.BUILD_OPTIONS }}
      unittest_command:  ${{ vars.UNITTEST_COMMAND }}
      testsuite_repo:    ${{ vars.TESTSUITE_REPO }}
      gatetest_list:     '[]'
      gatetest_commands: ${{ vars.GATETEST_COMMANDS }}
    secrets: inherit

  PreMergeTestResults:
    if: always()
    needs: [ GetBranches, PreMergeTest ]
    runs-on: ubuntu-latest
    steps:
      - name: Check unit test matrix status
        env:
          RESULT:   ${{ needs.PreMergeTest.result }}
          GH_TOKEN: ${{ secrets.TOKEN }}
        run: |
          declare -i rc=0
          case $RESULT in
            success)
              echo "All tests passed"
              ;;
            *)
              echo "One or more tests failed ($RESULT)"
              rc+=1
              ;;
          esac
          [ $rc -gt 0 ] && label=${{ vars.PRE_MERGE_CHECKS_FAILED_LABEL }} || \
            label=${{ vars.PRE_MERGE_CHECKS_PASSED_LABEL }}
          gh pr edit --repo ${{ github.repository }} \
            --remove-label ${{ vars.PRE_MERGE_TESTING_IN_PROGRESS }} \
            --add-label $label \
            $PR_NUMBER || :

  MergeAndCherryPick:
    needs: [ GetBranches, PreMergeTestResults ]
    if: success() && !inputs.dry_run
    runs-on: ubuntu-latest
    steps:
      - name: Start Merge
        env:
          GH_TOKEN:  ${{ secrets.TOKEN }}
        run: |
            gh pr edit --repo ${{ github.repository }} \
              --add-label ${{ vars.MERGE_IN_PROGRESS_LABEL }} \
              $PR_NUMBER || :

      - name: Get Token needed to push cherry-picks
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@v3
        with:
          application_id:          ${{ secrets.application_id }}
          application_private_key: ${{ secrets.application_private_key }}
          organization:            asterisk

      - name: Merge and Cherry Pick to ${{ needs.GetBranches.outputs.branches }}
        id: mergecp
        uses: asterisk/asterisk-ci-actions/MergeAndCherryPickComposite@main
        with:
          repo:          ${{ github.repository }}
          pr_number:     ${{ env.PR_NUMBER }}
          branches:      ${{ needs.GetBranches.outputs.branches }}
          force:         ${{ env.FORCE }}
          github_token:  ${{ steps.get_workflow_token.outputs.token }}

      - name: Merge Cleanup
        if: always()
        env:
          RESULT:       ${{ steps.mergecp.outcome }}
          GH_TOKEN:     ${{ secrets.TOKEN }}
          BRANCH_COUNT: ${{ needs.GetBranches.outputs.branch_count }}
          BRANCHES:     ${{ needs.GetBranches.outputs.branches }}

        run: |
          case $RESULT in
            success)
              gh pr edit --repo ${{ github.repository }} \
                --remove-label ${{ vars.MERGE_IN_PROGRESS_LABEL }} \
                $PR_NUMBER || :
              if [ $BRANCH_COUNT -eq 0 ] ; then
                gh pr comment --repo ${{ github.repository }} \
                  -b "Successfully merged to branch $BASE_BRANCH." \
                  $PR_NUMBER || :
              else
                gh pr comment --repo ${{ github.repository }} \
                  -b "Successfully merged to branch $BASE_BRANCH and cherry-picked to $BRANCHES" \
                  $PR_NUMBER || :
              fi
              exit 0
              ;;
            failure)
              gh pr edit --repo ${{ github.repository }} \
                --remove-label ${{ vars.MERGE_IN_PROGRESS_LABEL }} \
                --add-label ${{ vars.MERGE_FAILED_LABEL }} \
                $PR_NUMBER || :
              exit 1
              ;;
              *)
          esac
